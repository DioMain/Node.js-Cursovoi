generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://gamehub_admin:password@localhost:5433/gamehub?schema=data"
}

model game {
  id                                 Int           @id @default(autoincrement())
  User                               Int
  name                               String
  description                        String?
  tags                               String?
  state                              Int?          @default(0)
  priceusd                           Decimal       @db.Money
  user                               user          @relation(fields: [User], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review_review_gameTogame           review[]      @relation("review_gameTogame")
  sale_sale_gameTogame               sale[]        @relation("sale_gameTogame")
  transaction_transaction_gameTogame transaction[] @relation("transaction_gameTogame")
}

model paymentmethod {
  id                                                           Int           @id @default(autoincrement())
  User                                                         Int
  currency                                                     String
  type                                                         Int?          @default(0)
  specialinformation                                           Json?         @db.Json
  user                                                         user          @relation(fields: [User], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_transaction_customerpaymentmethodTopaymentmethod transaction[] @relation("transaction_customerpaymentmethodTopaymentmethod")
  transaction_transaction_vendorpaymentmethodTopaymentmethod   transaction[] @relation("transaction_vendorpaymentmethodTopaymentmethod")
}

model review {
  id                     Int    @id @default(autoincrement())
  game                   Int
  User                   Int
  text                   String
  mark                   Float  @db.Real
  user                   user   @relation(fields: [User], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game_review_gameTogame game   @relation("review_gameTogame", fields: [game], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sale {
  id                   Int      @id @default(autoincrement())
  game                 Int
  percent              Float?   @default(0) @db.Real
  cause                String?
  untilto              DateTime @db.Timestamp(6)
  game_sale_gameTogame game     @relation("sale_gameTogame", fields: [game], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transaction {
  id                                                             Int           @id @default(autoincrement())
  customerpaymentmethod                                          Int
  vendorpaymentmethod                                            Int
  game                                                           Int
  note                                                           String?
  paymentmethod_transaction_customerpaymentmethodTopaymentmethod paymentmethod @relation("transaction_customerpaymentmethodTopaymentmethod", fields: [customerpaymentmethod], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game_transaction_gameTogame                                    game          @relation("transaction_gameTogame", fields: [game], references: [id], onDelete: NoAction, onUpdate: NoAction)
  paymentmethod_transaction_vendorpaymentmethodTopaymentmethod   paymentmethod @relation("transaction_vendorpaymentmethodTopaymentmethod", fields: [vendorpaymentmethod], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  password      String
  email         String          @unique
  role          String
  walletusd     Decimal?        @default(0) @db.Money
  rjwt          String?
  game          game[]
  paymentmethod paymentmethod[]
  review        review[]
}
